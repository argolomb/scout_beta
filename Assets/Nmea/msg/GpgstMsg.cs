//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Nmea
{
    [Serializable]
    public class GpgstMsg : Message
    {
        public const string k_RosMessageName = "nmea_msgs/Gpgst";
        public override string RosMessageName => k_RosMessageName;

        //  Message from GPGST NMEA String
        public HeaderMsg header;
        public string message_id;
        //  UTC seconds from midnight
        public double utc_seconds;
        //  Root-Mean-Squared value of standard deviation of range inputs
        public float rms;
        //  Standard Deviations of semi-major and minor axes of error ellipse
        public float semi_major_dev;
        public float semi_minor_dev;
        //  Orientation of the semi-major axis of error ellipse with respect to true north
        public float orientation;
        //  Standard Deviations of latitude, longitude, and altitude measurements
        public float lat_dev;
        public float lon_dev;
        public float alt_dev;

        public GpgstMsg()
        {
            this.header = new HeaderMsg();
            this.message_id = "";
            this.utc_seconds = 0.0;
            this.rms = 0.0f;
            this.semi_major_dev = 0.0f;
            this.semi_minor_dev = 0.0f;
            this.orientation = 0.0f;
            this.lat_dev = 0.0f;
            this.lon_dev = 0.0f;
            this.alt_dev = 0.0f;
        }

        public GpgstMsg(HeaderMsg header, string message_id, double utc_seconds, float rms, float semi_major_dev, float semi_minor_dev, float orientation, float lat_dev, float lon_dev, float alt_dev)
        {
            this.header = header;
            this.message_id = message_id;
            this.utc_seconds = utc_seconds;
            this.rms = rms;
            this.semi_major_dev = semi_major_dev;
            this.semi_minor_dev = semi_minor_dev;
            this.orientation = orientation;
            this.lat_dev = lat_dev;
            this.lon_dev = lon_dev;
            this.alt_dev = alt_dev;
        }

        public static GpgstMsg Deserialize(MessageDeserializer deserializer) => new GpgstMsg(deserializer);

        private GpgstMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.message_id);
            deserializer.Read(out this.utc_seconds);
            deserializer.Read(out this.rms);
            deserializer.Read(out this.semi_major_dev);
            deserializer.Read(out this.semi_minor_dev);
            deserializer.Read(out this.orientation);
            deserializer.Read(out this.lat_dev);
            deserializer.Read(out this.lon_dev);
            deserializer.Read(out this.alt_dev);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.message_id);
            serializer.Write(this.utc_seconds);
            serializer.Write(this.rms);
            serializer.Write(this.semi_major_dev);
            serializer.Write(this.semi_minor_dev);
            serializer.Write(this.orientation);
            serializer.Write(this.lat_dev);
            serializer.Write(this.lon_dev);
            serializer.Write(this.alt_dev);
        }

        public override string ToString()
        {
            return "GpgstMsg: " +
            "\nheader: " + header.ToString() +
            "\nmessage_id: " + message_id.ToString() +
            "\nutc_seconds: " + utc_seconds.ToString() +
            "\nrms: " + rms.ToString() +
            "\nsemi_major_dev: " + semi_major_dev.ToString() +
            "\nsemi_minor_dev: " + semi_minor_dev.ToString() +
            "\norientation: " + orientation.ToString() +
            "\nlat_dev: " + lat_dev.ToString() +
            "\nlon_dev: " + lon_dev.ToString() +
            "\nalt_dev: " + alt_dev.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
