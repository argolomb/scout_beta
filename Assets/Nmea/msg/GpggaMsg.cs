//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Nmea
{
    [Serializable]
    public class GpggaMsg : Message
    {
        public const string k_RosMessageName = "nmea_msgs/Gpgga";
        public override string RosMessageName => k_RosMessageName;

        //  Message from GPGGA NMEA String
        public HeaderMsg header;
        public string message_id;
        //  UTC seconds from midnight
        public double utc_seconds;
        public double lat;
        public double lon;
        public string lat_dir;
        public string lon_dir;
        public uint gps_qual;
        public uint num_sats;
        public float hdop;
        public float alt;
        public string altitude_units;
        public float undulation;
        public string undulation_units;
        public uint diff_age;
        public string station_id;

        public GpggaMsg()
        {
            this.header = new HeaderMsg();
            this.message_id = "";
            this.utc_seconds = 0.0;
            this.lat = 0.0;
            this.lon = 0.0;
            this.lat_dir = "";
            this.lon_dir = "";
            this.gps_qual = 0;
            this.num_sats = 0;
            this.hdop = 0.0f;
            this.alt = 0.0f;
            this.altitude_units = "";
            this.undulation = 0.0f;
            this.undulation_units = "";
            this.diff_age = 0;
            this.station_id = "";
        }

        public GpggaMsg(HeaderMsg header, string message_id, double utc_seconds, double lat, double lon, string lat_dir, string lon_dir, uint gps_qual, uint num_sats, float hdop, float alt, string altitude_units, float undulation, string undulation_units, uint diff_age, string station_id)
        {
            this.header = header;
            this.message_id = message_id;
            this.utc_seconds = utc_seconds;
            this.lat = lat;
            this.lon = lon;
            this.lat_dir = lat_dir;
            this.lon_dir = lon_dir;
            this.gps_qual = gps_qual;
            this.num_sats = num_sats;
            this.hdop = hdop;
            this.alt = alt;
            this.altitude_units = altitude_units;
            this.undulation = undulation;
            this.undulation_units = undulation_units;
            this.diff_age = diff_age;
            this.station_id = station_id;
        }

        public static GpggaMsg Deserialize(MessageDeserializer deserializer) => new GpggaMsg(deserializer);

        private GpggaMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.message_id);
            deserializer.Read(out this.utc_seconds);
            deserializer.Read(out this.lat);
            deserializer.Read(out this.lon);
            deserializer.Read(out this.lat_dir);
            deserializer.Read(out this.lon_dir);
            deserializer.Read(out this.gps_qual);
            deserializer.Read(out this.num_sats);
            deserializer.Read(out this.hdop);
            deserializer.Read(out this.alt);
            deserializer.Read(out this.altitude_units);
            deserializer.Read(out this.undulation);
            deserializer.Read(out this.undulation_units);
            deserializer.Read(out this.diff_age);
            deserializer.Read(out this.station_id);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.message_id);
            serializer.Write(this.utc_seconds);
            serializer.Write(this.lat);
            serializer.Write(this.lon);
            serializer.Write(this.lat_dir);
            serializer.Write(this.lon_dir);
            serializer.Write(this.gps_qual);
            serializer.Write(this.num_sats);
            serializer.Write(this.hdop);
            serializer.Write(this.alt);
            serializer.Write(this.altitude_units);
            serializer.Write(this.undulation);
            serializer.Write(this.undulation_units);
            serializer.Write(this.diff_age);
            serializer.Write(this.station_id);
        }

        public override string ToString()
        {
            return "GpggaMsg: " +
            "\nheader: " + header.ToString() +
            "\nmessage_id: " + message_id.ToString() +
            "\nutc_seconds: " + utc_seconds.ToString() +
            "\nlat: " + lat.ToString() +
            "\nlon: " + lon.ToString() +
            "\nlat_dir: " + lat_dir.ToString() +
            "\nlon_dir: " + lon_dir.ToString() +
            "\ngps_qual: " + gps_qual.ToString() +
            "\nnum_sats: " + num_sats.ToString() +
            "\nhdop: " + hdop.ToString() +
            "\nalt: " + alt.ToString() +
            "\naltitude_units: " + altitude_units.ToString() +
            "\nundulation: " + undulation.ToString() +
            "\nundulation_units: " + undulation_units.ToString() +
            "\ndiff_age: " + diff_age.ToString() +
            "\nstation_id: " + station_id.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
